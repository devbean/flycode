package org.galaxyworld.flycode.model;

import com.google.common.collect.ImmutableList;
import com.intellij.database.model.DasColumn;
import com.intellij.database.model.DasTableKey;
import com.intellij.database.model.DataType;
import com.intellij.database.psi.DbTable;
import com.intellij.database.util.DasUtil;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.galaxyworld.flycode.util.DatabaseUtils;

import java.util.ArrayList;
import java.util.List;

@ToString
public class DatabaseTable {

    @Getter
    private String name;

    @Getter
    private String comment;

    @Setter @Getter
    private List<DatabaseTableColumn> columns;

    public DatabaseTable(DbTable table) {
        this.name = table.getName();
        this.comment = table.getComment();

        DasTableKey pk = DasUtil.getPrimaryKey(table);
        ImmutableList<String> pkNames = ImmutableList.of();
        if (pk != null) {
            pkNames = ImmutableList.copyOf(pk.getColumnsRef().names());
        }

        this.columns = new ArrayList<>();
        for (DasColumn dasColumn : DasUtil.getColumns(table)) {
            DataType dataType = dasColumn.getDataType();
            DatabaseTableColumn column = new DatabaseTableColumn();
//            column.setSqlName(dasColumn.getName(), keywordPostfix);
//            column.setType(Type.sqlToJavaType(dataType.typeName));
            column.setComment(dasColumn.getComment());
            column.setAutoGenerated(DatabaseUtils.isAutoGenerated(dasColumn));
            column.setDefaultValue(dasColumn.getDefault());
            column.setPrimaryKey(pkNames.contains(column.getSqlName()));
            column.setNotNull(dasColumn.isNotNull());
            if (dataType.size != DataType.NO_SIZE) {
                column.setSize(dataType.size);
            }
            columns.add(column);
        }
    }

}
